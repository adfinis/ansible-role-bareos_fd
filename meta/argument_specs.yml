---

# # bareos_dir_messages: Daemon

argument_specs:
  main:
    short_description: "Install and configure BareOS File Daemon on your system."
    description: >
      Install and configure BareOS File Daemon on your system.
    author: Adfinis
    options:
      bareos_fd_backup_configurations:
        type: "bool"
        default: false
        description: "Backup existing configurations."
      bareos_fd_install_debug_packages:
        type: "bool"
        default: false
        description: "Install debug packages. This requires the debug repositories to be enabled."
      bareos_fd_hostname:
        type: "str"
        default: "{{ inventory_hostname }}"
        description: "The hostname of the File Daemon."
      bareos_fd_max_job_bandwidth:
        type: "str"
        default: "10 mb/s"
        description: "The maximum bandwidth to use."
      bareos_fd_message:
        type: "str"
        default: "Standard"
        description: "The message to use."
      bareos_fd_maximum_concurrent_jobs:
        type: "int"
        default: 20
        description: "The maximum number of concurrent jobs."
      bareos_fd_tls_enable:
        type: "bool"
        default: true
        description: "Enable TLS."
      bareos_fd_tls_verify_peer:
        type: "bool"
        default: false
        description: "Verify the peer."
      bareos_fd_heartbeat_interval:
        type: "int"
        default: 0
        description: "The inteval in seconds to send a heartbeat."
      bareos_fd_directors:
        type: "list"
        default: []
        description: "The Directors to connect to."
      bareos_fd_messages:
        type: "list"
        default: []
        description: "The Messages to configure."
      bareos_fd_encryption_enable:
        type: "bool"
        default: false
        description: "For encryption of data, set this to `yes`."
      bareos_fd_encryption_private_key:
        type: "str"
        default: ""
        description: "You may bring your own private key. If not specified, a new one will be generated."
      bareos_fd_encryption_master_public_key:
        type: "str"
        default: ""
        description: "The master public key to use."
      bareos_fd_plugins:
        type: "list"
        description: "Bareos plugins to install on the FD"
        elements: "str"
        required: false
        version_added: v1.1.0
      bareos_fd_plugin_ldap_uri:
        type: "str"
        default: ""
        description: >-
          LDAP URI. Example:
          ldap://localhost
      bareos_fd_plugin_ldap_base_dn:
        type: "str"
        default: ""
        description: >-
          LDAP base DN. Example:
          dc=example,dc=com
      bareos_fd_plugin_ldap_bind_dn:
        type: "str"
        default: ""
        description: >-
          LDAP bind DN to use for LDAP authentication. Example:
          cn=admin,dc=example,dc=com
      bareos_fd_plugin_ldap_password:
        type: "str"
        default: ""
        description: "LDAP password for the provided bind DN"
      bareos_fd_nobackup_excludes:
        type: "list"
        description: >-
          List of paths that should be ignored from the backup.
          The role will place a .nobackup file in each directory on this list.
          The FileSets on the Director need the option "Exclude Dir Containing"
      bareos_fd_nobackup_filename:
        type: "str"
        default: ".nobackup"
        description: >-
          Filename which is used by the Bareos FileSets in the option "Exclude Dir Containing".
          Bareos recommends ".nobackup" which is the default option.

      # ReaR (Relax-and-Recover)
      bareos_fd_rear_enable:
        type: "bool"
        default: false
        description: >-
          When enabled this will install ReaR on the client and setup the configuration
          to create bootable images, which can be used for disaster-recovery.
          See: https://docs.bareos.org/Appendix/DisasterRecoveryUsingBareos.html#linux

          This option requires some extra settings on the Bareos Director side too.
          Namely you need a dedicated Bareos Console, which can be used by ReaR to trigger the restore,
          and you need to know the Bareos Client, FileSet and restore Job resource.
      bareos_fd_rear_client:
        type: "str"
        default: "{{ inventory_hostname }}"
        description: >-
          Name of the client resource as defined on the Bareos Director. Default is the Ansible inventory_hostname
      bareos_fd_rear_fileset:
        type: "str"
        default: "LinuxAll"
        description: "Which Bareos FileSet to use for the disaster recovery"
      bareos_fd_rear_restore_job:
        type: "str"
        default: "RestoreFiles"
        description: "Which Bareos Job to use to run the disaster recovery restore"
      bareos_fd_rear_output:
        type: "str"
        description: >-
          Format of the bootable rescue image. Only ISO is tested.
        choices:
          - "ISO"
          - "USB"
          - "RAWDISK"
          - "PXE"
          - "OBDR"
          - "PORTABLE"
      bareos_fd_rear_output_url:
        type: "str"
        description: >-
          It is recommended to store the rescue images on a remote location (For example NFS share),
          as you would have to run the restore on another machine first to get the restore image to boot from.
      bareos_fd_rear_console_name:
        type: "str"
        default: "rear-{{ inventory_hostname_short }}-console"
        description: >-
          Bareos Console resource used by ReaR to trigger the restore job. Resource has to exist on Bareos Director.
          Bareos recommends that a dedicated named Console for each backup client is used.
          See: https://docs.bareos.org/Appendix/DisasterRecoveryUsingBareos.html#configure-a-named-console-for-rear
      bareos_fd_rear_console_pass:
        type: "str"
        default: "{{ lookup('ansible.builtin.password', '/dev/null', seed=inventory_hostname, length=20, chars='ascii_letters') }}"
        description: >-
          Password for the Bareos Console resource. Will be auto-generated, if not provided.
          The secret has to match to the Console resource on the Bareos Director.
      bareos_fd_io_nice_enable:
        type: "bool"
        default: false
        description: "Enable nice value override for bareos-filedaemon.service"
      bareos_fd_io_nice_value:
        type: "int"
        default: 10
        description: "Set the override nice value -20 (highest priority) to 20 (least priority)"
      bareos_fd_io_scheduling_class:
        type: "str"
        default: "best-effort"
        description: "Set I/O scheduling class"
        choices:
          - "realtime"
          - "best-effort"
          - "idle"
      bareos_fd_io_scheduling_priority:
        type: "int"
        default: 7
        description: "Set I/O scheduling priority 0 (highest priority) and 7 (lowest priority)"
